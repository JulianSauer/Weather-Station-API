name: Publish binary to S3
on: [ push ]
jobs:
  publish:
    name: Build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.2'
      - name: Build weather endpoint
        run: GOOS=linux go build weather/main.go && zip function.zip main
      - name: Upload weather endpoint to S3
        uses: zdurham/s3-upload-github-action@master
        env:
          FILE: ./function.zip
          AWS_REGION: 'eu-central-1'
          S3_BUCKET: 'weather-station-lambda-functions'
          S3_KEY: 'WeatherAPI/function.zip'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build forecast endpoint
        run: GOOS=linux go build forecast/main.go && zip forecast.zip main
      - name: Upload forecast endpoint to S3
        uses: zdurham/s3-upload-github-action@master
        env:
          FILE: ./forecast.zip
          AWS_REGION: 'eu-central-1'
          S3_BUCKET: 'weather-station-lambda-functions'
          S3_KEY: 'WeatherAPI/forecast.zip'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build data mining function
        run: GOOS=linux go build datamining/main.go && zip datamining.zip main
      - name: Upload forecast endpoint to S3
        uses: zdurham/s3-upload-github-action@master
        env:
          FILE: ./datamining.zip
          AWS_REGION: 'eu-central-1'
          S3_BUCKET: 'weather-station-lambda-functions'
          S3_KEY: 'WeatherAPI/datamining.zip'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
